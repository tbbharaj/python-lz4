name: Build


on: [push, pull_request, release]

#on:
#  push:
#    branches:
#  release:
#    types: [created]
#  pull_request:

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Install Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Build sdist
      run: python setup.py sdist
    - name: Save sdist
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  wheels:
    name: Build wheels on ${{ matrix.os }} CIBW_BUILD=${{ matrix.cibw_build }} CIBW_ARCHS_LINUX=${{ matrix.cibw_archs_linux }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #,macOS-latest] # ,windows-latest] 
        cibw_build: [cp36-*, cp37-*, cp38-*, cp39-*]
        cibw_archs_linux: [auto,  aarch64]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Set up QEMU  # Needed to build aarch64 wheels
        if: runner.os == 'Linux' && matrix.cibw_archs_linux == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: joerick/cibuildwheel@v1.11.1
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_archs_linux }}
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_TEST_COMMAND: "pushd {project} && tox tests && popd"
          CIBW_BEFORE_BUILD: "python -m pip install -U pip && python -m pip install tox"
      - name: Save wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

#  upload_pypi:
#    name: Upload to PyPI
#    needs: [sdist, wheels]
#    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/')
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#      - uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}
#          skip_existing: true
